{"version":3,"sources":["constants/newsConstants.ts","constants/weatherConstants.ts","reducers/newsReducers.ts","reducers/weatherReducer.ts","store.ts","components/Header.tsx","components/NewsCards.tsx","components/NewsCarousels.tsx","actions/weatherActions.ts","components/WeatherCards.tsx","actions/newsActions.ts","screens/MainPage.tsx","screens/TWNewsPage.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NewsListAction","WeatherAction","initialState","loading","error","data","weatherData","main","feels_like","humidity","pressure","temp","temp_max","temp_min","name","sys","country","sunrise","sunset","weather","id","description","icon","wind","deg","speed","reducer","combineReducers","news","state","action","type","NEWS_LIST_REQUEST","NEWS_LIST_REQUEST_SUCCESS","payload","NEWS_LIST_REQUEST_FAIL","WEATHER_REQUEST","WEATHER_REQUEST_SUCCESS","WEATHER_REQUEST_FAIL","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","className","Container","Nav","Link","href","to","Item","NewsCards","publictAt","article","language","Card","Body","Title","title","Subtitle","author","Img","src","urlToImage","Text","url","Footer","publishedAt","Date","toString","split","NewsCarousels","articles","Carousel","map","Image","style","minHeight","maxHeight","objectFit","alt","Caption","fontSize","objectWeather","city","dispatch","a","process","axios","get","message","WeatherCards","useDispatch","useState","isLoading","setIsLoading","cityInput","setCityInput","setDeg","useSelector","kelvinToCOrF","kelvin","Math","round","kelvinToCelcius","kelvinToFahrenheit","useEffect","console","log","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","cityInputChangeHandler","Append","Button","variant","onClick","as","fluid","listNews","newsAPI","NewsAPI","getTopHeadlines","category","pageSize","page","topHeadlines","MainPage","newsList","Row","Col","xs","sm","md","filter","item","i","lg","TWNewsPage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcddc40e.chunk.js","sourcesContent":["export enum NewsListAction {\r\n  NEWS_LIST_REQUEST = 'NEWS_LIST_REQUEST',\r\n  NEWS_LIST_REQUEST_SUCCESS = 'NEWS_LIST_REQUEST_SUCCESS',\r\n  NEWS_LIST_REQUEST_FAIL = 'NEWS_LIST_REQUEST_FAIL',\r\n}\r\n\r\nexport const NEWS_DETAILS_REQUEST = 'NEWS_DETAILS_REQUEST';\r\nexport const NEWS_DETAILS_REQUEST_SUCCESS = 'NEWS_DETAILS_REQUEST_SUCCESS';\r\nexport const NEWS_DETAILS_REQUEST_FAIL = 'NEWS_DETAILS_REQUEST_FAIL';\r\n","export enum WeatherAction {\r\n  WEATHER_REQUEST = 'WEATHER_REQUEST',\r\n  WEATHER_REQUEST_SUCCESS = 'WEATHER_REQUEST_SUCCESS',\r\n  WEATHER_REQUEST_FAIL = 'WEATHER_REQUEST_FAIL',\r\n}\r\n","import { NewsListAction } from '../constants/newsConstants';\r\nimport { NewsActionType } from '../api/newsapiActionType';\r\n\r\ninterface newsState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  data: string[];\r\n}\r\n\r\n// set up initail state when first in page\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: [],\r\n};\r\n\r\nexport const newsReducer = (\r\n  state: newsState = initialState,\r\n  action: NewsActionType\r\n) => {\r\n  switch (action.type) {\r\n    case NewsListAction.NEWS_LIST_REQUEST:\r\n      return { loading: true, error: null, data: [] };\r\n    case NewsListAction.NEWS_LIST_REQUEST_SUCCESS:\r\n      return { loading: false, error: null, data: action.payload };\r\n    case NewsListAction.NEWS_LIST_REQUEST_FAIL:\r\n      return { loading: false, error: action.payload, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { WeatherAction } from '../constants/weatherConstants';\r\nimport {\r\n  WeatherActionType,\r\n  IWeatherData,\r\n} from '../api/openWeatherMapActionTypes';\r\n\r\nexport interface IWeatherState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  weatherData: IWeatherData;\r\n}\r\n\r\nconst initialState: IWeatherState = {\r\n  loading: false,\r\n  error: null,\r\n  weatherData: {\r\n    main: {\r\n      feels_like: 0,\r\n      humidity: 0,\r\n      pressure: 0,\r\n      temp: 0,\r\n      temp_max: 0,\r\n      temp_min: 0,\r\n    },\r\n    name: '',\r\n    sys: {\r\n      country: '',\r\n      sunrise: 0,\r\n      sunset: 0,\r\n    },\r\n    weather: {\r\n      id: 200,\r\n      main: '',\r\n      description: '',\r\n      icon: '',\r\n    },\r\n    wind: {\r\n      deg: 0,\r\n      speed: 0,\r\n    },\r\n  },\r\n};\r\n\r\nexport const weatherReducer = (\r\n  state: IWeatherState = initialState,\r\n  action: WeatherActionType\r\n) => {\r\n  switch (action.type) {\r\n    case WeatherAction.WEATHER_REQUEST:\r\n      return { loading: true, error: null, weatherData: [] };\r\n    case WeatherAction.WEATHER_REQUEST_SUCCESS:\r\n      return { loading: false, error: null, weatherData: action.payload };\r\n    case WeatherAction.WEATHER_REQUEST_FAIL:\r\n      return { loading: false, error: action.payload, weatherData: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { newsReducer } from './reducers/newsReducers';\r\nimport { weatherReducer } from './reducers/weatherReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducer = combineReducers({\r\n  news: newsReducer,\r\n  weather: weatherReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","// import { LinkContainer } from 'react-router-bootstrap'; // = to Link from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <Navbar className='navbar navbar-expand-lg navbar-dark bg-primary p-0'>\r\n      <Container className='container-fluid'>\r\n        <Nav.Link className='navbar-brand' href='/'>\r\n          DY.\r\n        </Nav.Link>\r\n        {/* <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-bs-toggle='collapse'\r\n          data-bs-target='#navbarColor01'\r\n          aria-controls='navbarColor01'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button> */}\r\n\r\n        <div className='collapse navbar-collapse' id='navbarColor01'>\r\n          <Nav className='navbar-nav me-auto'>\r\n            <Link to='/'>\r\n              <Nav.Item className='nav-link'>US Hot</Nav.Item>\r\n            </Link>\r\n            <Link to='/twnews'>\r\n              <Nav.Item className='nav-link'>TW Hot</Nav.Item>\r\n            </Link>\r\n\r\n            {/* <li className='nav-item'>\r\n              <a className='nav-link' href='#'>\r\n                Business\r\n              </a>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <a className='nav-link' href='#'>\r\n                Science\r\n              </a>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <a className='nav-link' href='#'>\r\n                Technology\r\n              </a>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <a className='nav-link' href='#'>\r\n                Health\r\n              </a>\r\n            </li> */}\r\n\r\n            {/* <li className='nav-item dropdown'>\r\n              <a\r\n                className='nav-link dropdown-toggle'\r\n                data-bs-toggle='dropdown'\r\n                href='#'\r\n                role='button'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              >\r\n                Dropdown\r\n              </a>\r\n              <div className='dropdown-menu'>\r\n                <a className='dropdown-item' href='#'>\r\n                  Action\r\n                </a>\r\n                <a className='dropdown-item' href='#'>\r\n                  Another action\r\n                </a>\r\n                <a className='dropdown-item' href='#'>\r\n                  Something else here\r\n                </a>\r\n                <div className='dropdown-divider'></div>\r\n                <a className='dropdown-item' href='#'>\r\n                  Separated link\r\n                </a>\r\n              </div>\r\n            </li> */}\r\n          </Nav>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\n\r\ntype CardProps = {\r\n  article?: any;\r\n  language?: string;\r\n};\r\n\r\nconst NewsCards: React.FC<CardProps> = ({ article, language }) => {\r\n  const toLocalTime = (publictAt: string) => {\r\n    const date = new Date(publictAt);\r\n\r\n    // console.log(date.toString());\r\n\r\n    return date.toString().split('GMT')[0];\r\n  };\r\n\r\n  // console.log(article);\r\n  return (\r\n    <Card className='mb-3'>\r\n      <Card.Body>\r\n        <Card.Title>{article.title}</Card.Title>\r\n        <Card.Subtitle className='text-muted'>{article.author}</Card.Subtitle>\r\n      </Card.Body>\r\n      <Card.Img\r\n        src={\r\n          article.urlToImage\r\n            ? article.urlToImage\r\n            : 'https://howfix.net/wp-content/uploads/2018/02/sIaRmaFSMfrw8QJIBAa8mA-article.png'\r\n        }\r\n      />\r\n      <Card.Body>\r\n        <Card.Text>{article.description}</Card.Text>\r\n      </Card.Body>\r\n      <Card.Body>\r\n        <Card.Link href={article.url} className='card-link'>\r\n          <i className='fas fa-newspaper'></i>{' '}\r\n          {language == 'tw' ? '完整報導' : 'News link'}\r\n        </Card.Link>\r\n        {/* <a href='#' className='card-link'>\r\n          Read more\r\n        </a> */}\r\n      </Card.Body>\r\n      <Card.Footer className='card-footer text-muted'>\r\n        {toLocalTime(article.publishedAt)}\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewsCards;\r\n","import React from 'react';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link, useHistory, Router } from 'react-router-dom';\r\n\r\ntype CardProps = {\r\n  articles?: any;\r\n};\r\n\r\nconst NewsCarousels: React.FC<CardProps> = ({ articles }) => {\r\n  // const history = useHistory();\r\n  // console.log(articles);\r\n  // const goToNewsLink = (url: string) => {\r\n  //   history.push(url);\r\n  //   console.log(url);\r\n  // };\r\n  return (\r\n    <Carousel className='h-100'>\r\n      {articles.map((article: any) => (\r\n        <Carousel.Item className='h-100 overflow-hidden' key={article.title}>\r\n          <a href={article.url}>\r\n            <Image\r\n              className='d-block w-100'\r\n              style={{\r\n                minHeight: '340px',\r\n                maxHeight: '340px',\r\n                objectFit: 'cover',\r\n              }}\r\n              src={article.urlToImage}\r\n              alt={article.title}\r\n            />\r\n          </a>\r\n\r\n          <Carousel.Caption className='pb-1'>\r\n            {/* <h3>{article.title}</h3> */}\r\n            <p style={{ fontSize: '0.9rem' }}>{article.title}</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default NewsCarousels;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { WeatherAction } from '../constants/weatherConstants';\r\nimport { WeatherActionType } from '../api/openWeatherMapActionTypes';\r\nimport { weather_data } from '../data';\r\n\r\nexport const objectWeather =\r\n  (city: string = 'seattle') =>\r\n  async (dispatch: Dispatch<WeatherActionType>) => {\r\n    try {\r\n      dispatch({ type: WeatherAction.WEATHER_REQUEST });\r\n      //* get api key from .env\r\n      const apiKey: string = process.env.REACT_APP_OPENWEATHERMAP_API as string;\r\n      const { data } = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`\r\n      );\r\n\r\n      dispatch({\r\n        type: WeatherAction.WEATHER_REQUEST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: WeatherAction.WEATHER_REQUEST_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Image, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { weather_data } from '../data';\r\nimport { objectWeather } from '../actions/weatherActions';\r\n\r\ninterface weatherProps {\r\n  city?: string;\r\n}\r\n\r\nconst WeatherCards: React.FC<weatherProps> = ({ city }) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [cityInput, setCityInput] = useState<string>('');\r\n  const [deg, setDeg] = useState('K');\r\n\r\n  const data = useSelector((state: any) => state.weather);\r\n  const { loading, error, weatherData } = data;\r\n\r\n  const kelvinToCelcius = (kelvin: number) => {\r\n    const celcius = Math.round(kelvin - 273.15);\r\n    return celcius;\r\n  };\r\n  const kelvinToFahrenheit = (kelvin: number) => {\r\n    const fahrenheit = Math.round(((kelvin - 273.15) * 9) / 5 + 32);\r\n    return fahrenheit;\r\n  };\r\n\r\n  const kelvinToCOrF = (kelvin: number, deg: string) => {\r\n    if (deg == 'C') {\r\n      return kelvinToCelcius(kelvin);\r\n    }\r\n    if (deg == 'F') {\r\n      return kelvinToFahrenheit(kelvin);\r\n    }\r\n  };\r\n\r\n  const cityInputChangeHandler = (e: any) => {\r\n    setCityInput(e.target.value);\r\n    // console.log(cityInput);\r\n  };\r\n\r\n  const citySearchButtonClickHandler = () => {\r\n    // console.log(cityInput);\r\n    dispatch(objectWeather(cityInput));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('re-render');\r\n    dispatch(objectWeather(city));\r\n    setIsLoading(false);\r\n    if (city == 'Kaohsiung') {\r\n      setDeg('C');\r\n    } else {\r\n      setDeg('F');\r\n    }\r\n  }, []);\r\n\r\n  if (loading || error) {\r\n    // console.log(loading);\r\n    // console.log(error);\r\n    return <div>Loading..</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // console.log(weatherData);\r\n  // const weatherData = weather_data;\r\n  return (\r\n    <Card className='text-white bg-primary h-100'>\r\n      <InputGroup className='mb-3'>\r\n        <FormControl\r\n          placeholder={weatherData?.name}\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby='basic-addon2'\r\n          className='form-group-lg'\r\n          onChange={(e) => cityInputChangeHandler(e)}\r\n        />\r\n        <InputGroup.Append>\r\n          <Button\r\n            variant='outline-secondary p-2 d-flex justify-content-center align-items-center'\r\n            onClick={citySearchButtonClickHandler}\r\n          >\r\n            <i className='city-weather-search-btn fas fa-search-location'></i>\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      <Card.Header>{weatherData?.name} Today's Weather:</Card.Header>\r\n      <Card.Body className='w-100'>\r\n        <Card.Title style={{ fontSize: '1.6rem' }} className='text-center'>\r\n          {weatherData?.weather[0].main}\r\n        </Card.Title>\r\n        <Card.Body\r\n          className='d-flex justify-content-around align-items-center p-0'\r\n          style={{ fontSize: '0.5rem' }}\r\n        >\r\n          <ul className='mb-0'>\r\n            <Card.Text style={{ fontSize: '2.5rem' }} className='mb-0'>\r\n              {kelvinToCOrF(weatherData?.main.temp, deg)}&deg;{deg}\r\n            </Card.Text>\r\n            <Card.Text className='mb-0'>\r\n              High: <span>{kelvinToCOrF(weatherData?.main.temp_max, deg)}</span>\r\n              &deg;/ Low:{' '}\r\n              <span>{kelvinToCOrF(weatherData?.main.temp_min, deg)}</span>&deg;\r\n            </Card.Text>\r\n            <Card.Text className='mb-0'>\r\n              <i className='water-drip fas fa-tint'></i> Humidity:{' '}\r\n              <span>{weatherData?.main.humidity}</span>%\r\n            </Card.Text>\r\n            <Card.Text className='mb-0'>\r\n              <i className='fas fa-wind'></i> Wind:{' '}\r\n              <span>{weatherData?.wind.speed}</span>m/s\r\n            </Card.Text>\r\n          </ul>\r\n          <Card.Img\r\n            as={Image}\r\n            className='w-50'\r\n            src={`http://openweathermap.org/img/wn/${weatherData?.weather[0].icon}.png`}\r\n            fluid={true}\r\n            alt={weatherData?.weather[0].description}\r\n          />\r\n        </Card.Body>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCards;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { NewsListAction } from '../constants/newsConstants';\r\nimport { NewsActionType } from '../api/newsapiActionType';\r\nimport { news_data } from '../data';\r\nimport NewsAPI from 'ts-newsapi';\r\n\r\n// interface ProcessEnv {\r\n//   NODE_ENV: 'development' | 'production' | 'test';\r\n//   REACT_APP_NEWS_API: string;\r\n// }\r\n\r\nexport const listNews =\r\n  (country: any = 'us') =>\r\n  async (dispatch: Dispatch<NewsActionType>) => {\r\n    try {\r\n      dispatch({ type: NewsListAction.NEWS_LIST_REQUEST });\r\n      //* get api key from .env\r\n      const apiKey: string = process.env.REACT_APP_NEWS_API as string;\r\n      const newsAPI = new NewsAPI(apiKey);\r\n\r\n      const topHeadlines = await newsAPI.getTopHeadlines({\r\n        country: country,\r\n        category: 'business',\r\n        pageSize: 40,\r\n        page: 1,\r\n      });\r\n\r\n      // console.log(topHeadlines);\r\n      const { articles } = topHeadlines;\r\n\r\n      // console.log(articles);\r\n\r\n      dispatch({\r\n        type: NewsListAction.NEWS_LIST_REQUEST_SUCCESS,\r\n        payload: articles,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: NewsListAction.NEWS_LIST_REQUEST_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  CardColumns,\r\n  Card,\r\n  CardDeck,\r\n} from 'react-bootstrap';\r\nimport NewsCards from '../components/NewsCards';\r\nimport NewsCarousels from '../components/NewsCarousels';\r\nimport WeatherCards from '../components/WeatherCards';\r\nimport { news_data } from '../data';\r\nimport { listNews } from '../actions/newsActions';\r\n// // todo: CSS: try to make every card hight be the same\r\n// // todo: HTML: change all the html into jsx or tsx (ex: div -> Card)\r\n// todo: tw news page\r\n// todo: component: news detaill page (or pop up box)\r\n// // todo: get the news form data.ts in to Main page\r\n//// todo: styling weather cards:\r\n// // todo: craete weather constants, weather reducer, weather aciton, and add into store\r\n// // todo: openWeatherMap api: fetch weather info into weather cards\r\n// // todo: OPEN_WEATHER_API: try to stall/fetch weather info into weather-cards\r\n// // todo: NEWS_API: try to stall/fetch news into news-cards, new carousels\r\n// todo: footer\r\n// todo: BACKEND: does it need to have backend to call news-api?\r\n// todo: Firebase: host on firebase\r\n\r\n// todo: issues: LinkContainer does not works in header\r\nconst MainPage: React.FC = () => {\r\n  //* get news from redux******************************************************************************\r\n  const dispatch = useDispatch();\r\n\r\n  const newsList = useSelector((state: any) => state.news);\r\n\r\n  const { loading, error, data } = newsList;\r\n  // console.log(data);\r\n  useEffect(() => {\r\n    dispatch(listNews());\r\n  }, []);\r\n  const articles = data;\r\n  //******************************************************************************************************\r\n  // const loading = false,\r\n  //   error = null;\r\n  // const { articles } = news_data;\r\n  // console.log(articles);\r\n\r\n  return (\r\n    <Container className='main-container'>\r\n      <Row className='mb-5 align-items-center'>\r\n        <Col xs={12} sm={12} md={4}>\r\n          <WeatherCards city='Seattle' />\r\n        </Col>\r\n        <Col xs={12} sm={12} md={8}>\r\n          {!loading && !error && (\r\n            <NewsCarousels\r\n              articles={articles.filter((item: any, i: number) => i < 3)}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {!loading &&\r\n          !error &&\r\n          articles.map((article: any, i: number) => {\r\n            if (i > 2 && article.description) {\r\n              return (\r\n                <Col className='h-100' key={i} xs={12} md={6} lg={4}>\r\n                  <NewsCards article={article} key={i} />\r\n                </Col>\r\n              );\r\n            }\r\n          })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  CardColumns,\r\n  Card,\r\n  CardDeck,\r\n} from 'react-bootstrap';\r\nimport NewsCards from '../components/NewsCards';\r\nimport NewsCarousels from '../components/NewsCarousels';\r\nimport WeatherCards from '../components/WeatherCards';\r\nimport { news_data } from '../data';\r\nimport { listNews } from '../actions/newsActions';\r\n\r\nconst TWNewsPage: React.FC = () => {\r\n  //* get news from redux******************************************************************************\r\n  const dispatch = useDispatch();\r\n\r\n  const newsList = useSelector((state: any) => state.news);\r\n\r\n  const { loading, error, data } = newsList;\r\n  // console.log(data);\r\n  useEffect(() => {\r\n    dispatch(listNews('tw'));\r\n  }, []);\r\n  const articles = data;\r\n  //******************************************************************************************************\r\n  // const loading = false,\r\n  //   error = null;\r\n  // const { articles } = news_data;\r\n  // console.log(articles);\r\n\r\n  return (\r\n    <Container className='main-container'>\r\n      <Row className='mb-5 align-items-center'>\r\n        <Col xs={12} sm={12} md={4}>\r\n          <WeatherCards city='Kaohsiung' />\r\n        </Col>\r\n        <Col xs={12} sm={12} md={8}>\r\n          {!loading && !error && (\r\n            <NewsCarousels\r\n              articles={articles.filter((item: any, i: number) => i < 3)}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {!loading &&\r\n          !error &&\r\n          articles.map((article: any, i: number) => {\r\n            if (i > 2 && article.description) {\r\n              return (\r\n                <Col className='h-100' key={i} xs={12} md={6} lg={4}>\r\n                  <NewsCards article={article} key={i} language='tw' />\r\n                </Col>\r\n              );\r\n            }\r\n          })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TWNewsPage;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy;{' '}\r\n            <a href='https://daniel-adam-yu.netlify.app/'>Daniel Yu</a> | 2021\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport MainPage from './screens/MainPage';\nimport TWNewsPage from './screens/TWNewsPage';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main>\n        <Route path='/twnews' component={TWNewsPage} exact />\n        <Route path='/' component={MainPage} exact />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}